/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode start = head;
        int count = 0;
        // finding length of list;
        while ( start != null ){
            count++;
            start= start.next;
        }
        start = head;
        // if nth element = length of linked  list return head.next element
        if( n==count) return head.next;
        // iterate before the  element that is to be deleted
        for ( int i = 0 ; i< count-n-1; i++ ){
            start= start.next ;
        }
        //change next of previous element of element to be deleted to next element of node to be deleted
        start.next = start.next.next ;
        return head;
        
    }
}
